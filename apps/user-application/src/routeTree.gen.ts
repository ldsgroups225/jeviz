/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StaticRouteRouteImport } from './routes/_static/route'
import { Route as OnboardingRouteRouteImport } from './routes/_onboarding/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingSeriesRouteImport } from './routes/_onboarding/series'
import { Route as OnboardingGradeRouteImport } from './routes/_onboarding/grade'
import { Route as OnboardingCompleteRouteImport } from './routes/_onboarding/complete'
import { Route as StaticDocsIndexRouteImport } from './routes/_static/docs/index'
import { Route as AuthLearnIndexRouteImport } from './routes/_auth/learn/index'
import { Route as AuthAppIndexRouteImport } from './routes/_auth/app/index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth.$'
import { Route as StaticDocsNameRouteImport } from './routes/_static/docs/$name'
import { Route as AuthLearnSubjectSubjectIdRouteImport } from './routes/_auth/learn/subject/$subjectId'
import { Route as AuthAppPolarSubscriptionsRouteImport } from './routes/_auth/app/polar/subscriptions'
import { Route as AuthAppPolarPortalRouteImport } from './routes/_auth/app/polar/portal'
import { Route as AuthAppPolarCheckoutSuccessRouteImport } from './routes/_auth/app/polar/checkout.success'
import { Route as AuthLearnStudySubjectIdChapterIdModeRouteImport } from './routes/_auth/learn/study/$subjectId/$chapterId/mode'

const StaticRouteRoute = StaticRouteRouteImport.update({
  id: '/_static',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRouteRoute = OnboardingRouteRouteImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingSeriesRoute = OnboardingSeriesRouteImport.update({
  id: '/series',
  path: '/series',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingGradeRoute = OnboardingGradeRouteImport.update({
  id: '/grade',
  path: '/grade',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingCompleteRoute = OnboardingCompleteRouteImport.update({
  id: '/complete',
  path: '/complete',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const StaticDocsIndexRoute = StaticDocsIndexRouteImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => StaticRouteRoute,
} as any)
const AuthLearnIndexRoute = AuthLearnIndexRouteImport.update({
  id: '/learn/',
  path: '/learn/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppIndexRoute = AuthAppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const StaticDocsNameRoute = StaticDocsNameRouteImport.update({
  id: '/docs/$name',
  path: '/docs/$name',
  getParentRoute: () => StaticRouteRoute,
} as any)
const AuthLearnSubjectSubjectIdRoute =
  AuthLearnSubjectSubjectIdRouteImport.update({
    id: '/learn/subject/$subjectId',
    path: '/learn/subject/$subjectId',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthAppPolarSubscriptionsRoute =
  AuthAppPolarSubscriptionsRouteImport.update({
    id: '/app/polar/subscriptions',
    path: '/app/polar/subscriptions',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthAppPolarPortalRoute = AuthAppPolarPortalRouteImport.update({
  id: '/app/polar/portal',
  path: '/app/polar/portal',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppPolarCheckoutSuccessRoute =
  AuthAppPolarCheckoutSuccessRouteImport.update({
    id: '/app/polar/checkout/success',
    path: '/app/polar/checkout/success',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthLearnStudySubjectIdChapterIdModeRoute =
  AuthLearnStudySubjectIdChapterIdModeRouteImport.update({
    id: '/learn/study/$subjectId/$chapterId/mode',
    path: '/learn/study/$subjectId/$chapterId/mode',
    getParentRoute: () => AuthRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/complete': typeof OnboardingCompleteRoute
  '/grade': typeof OnboardingGradeRoute
  '/series': typeof OnboardingSeriesRoute
  '/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/app': typeof AuthAppIndexRoute
  '/learn': typeof AuthLearnIndexRoute
  '/docs': typeof StaticDocsIndexRoute
  '/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/learn/subject/$subjectId': typeof AuthLearnSubjectSubjectIdRoute
  '/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/learn/study/$subjectId/$chapterId/mode': typeof AuthLearnStudySubjectIdChapterIdModeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/complete': typeof OnboardingCompleteRoute
  '/grade': typeof OnboardingGradeRoute
  '/series': typeof OnboardingSeriesRoute
  '/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/app': typeof AuthAppIndexRoute
  '/learn': typeof AuthLearnIndexRoute
  '/docs': typeof StaticDocsIndexRoute
  '/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/learn/subject/$subjectId': typeof AuthLearnSubjectSubjectIdRoute
  '/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/learn/study/$subjectId/$chapterId/mode': typeof AuthLearnStudySubjectIdChapterIdModeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_onboarding': typeof OnboardingRouteRouteWithChildren
  '/_static': typeof StaticRouteRouteWithChildren
  '/_onboarding/complete': typeof OnboardingCompleteRoute
  '/_onboarding/grade': typeof OnboardingGradeRoute
  '/_onboarding/series': typeof OnboardingSeriesRoute
  '/_static/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_auth/app/': typeof AuthAppIndexRoute
  '/_auth/learn/': typeof AuthLearnIndexRoute
  '/_static/docs/': typeof StaticDocsIndexRoute
  '/_auth/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/_auth/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/_auth/learn/subject/$subjectId': typeof AuthLearnSubjectSubjectIdRoute
  '/_auth/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/_auth/learn/study/$subjectId/$chapterId/mode': typeof AuthLearnStudySubjectIdChapterIdModeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/complete'
    | '/grade'
    | '/series'
    | '/docs/$name'
    | '/api/auth/$'
    | '/app'
    | '/learn'
    | '/docs'
    | '/app/polar/portal'
    | '/app/polar/subscriptions'
    | '/learn/subject/$subjectId'
    | '/app/polar/checkout/success'
    | '/learn/study/$subjectId/$chapterId/mode'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/complete'
    | '/grade'
    | '/series'
    | '/docs/$name'
    | '/api/auth/$'
    | '/app'
    | '/learn'
    | '/docs'
    | '/app/polar/portal'
    | '/app/polar/subscriptions'
    | '/learn/subject/$subjectId'
    | '/app/polar/checkout/success'
    | '/learn/study/$subjectId/$chapterId/mode'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_onboarding'
    | '/_static'
    | '/_onboarding/complete'
    | '/_onboarding/grade'
    | '/_onboarding/series'
    | '/_static/docs/$name'
    | '/api/auth/$'
    | '/_auth/app/'
    | '/_auth/learn/'
    | '/_static/docs/'
    | '/_auth/app/polar/portal'
    | '/_auth/app/polar/subscriptions'
    | '/_auth/learn/subject/$subjectId'
    | '/_auth/app/polar/checkout/success'
    | '/_auth/learn/study/$subjectId/$chapterId/mode'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  StaticRouteRoute: typeof StaticRouteRouteWithChildren
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_static': {
      id: '/_static'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StaticRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/series': {
      id: '/_onboarding/series'
      path: '/series'
      fullPath: '/series'
      preLoaderRoute: typeof OnboardingSeriesRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/_onboarding/grade': {
      id: '/_onboarding/grade'
      path: '/grade'
      fullPath: '/grade'
      preLoaderRoute: typeof OnboardingGradeRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/_onboarding/complete': {
      id: '/_onboarding/complete'
      path: '/complete'
      fullPath: '/complete'
      preLoaderRoute: typeof OnboardingCompleteRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/_static/docs/': {
      id: '/_static/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof StaticDocsIndexRouteImport
      parentRoute: typeof StaticRouteRoute
    }
    '/_auth/learn/': {
      id: '/_auth/learn/'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof AuthLearnIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/': {
      id: '/_auth/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthAppIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_static/docs/$name': {
      id: '/_static/docs/$name'
      path: '/docs/$name'
      fullPath: '/docs/$name'
      preLoaderRoute: typeof StaticDocsNameRouteImport
      parentRoute: typeof StaticRouteRoute
    }
    '/_auth/learn/subject/$subjectId': {
      id: '/_auth/learn/subject/$subjectId'
      path: '/learn/subject/$subjectId'
      fullPath: '/learn/subject/$subjectId'
      preLoaderRoute: typeof AuthLearnSubjectSubjectIdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/polar/subscriptions': {
      id: '/_auth/app/polar/subscriptions'
      path: '/app/polar/subscriptions'
      fullPath: '/app/polar/subscriptions'
      preLoaderRoute: typeof AuthAppPolarSubscriptionsRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/polar/portal': {
      id: '/_auth/app/polar/portal'
      path: '/app/polar/portal'
      fullPath: '/app/polar/portal'
      preLoaderRoute: typeof AuthAppPolarPortalRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/polar/checkout/success': {
      id: '/_auth/app/polar/checkout/success'
      path: '/app/polar/checkout/success'
      fullPath: '/app/polar/checkout/success'
      preLoaderRoute: typeof AuthAppPolarCheckoutSuccessRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/learn/study/$subjectId/$chapterId/mode': {
      id: '/_auth/learn/study/$subjectId/$chapterId/mode'
      path: '/learn/study/$subjectId/$chapterId/mode'
      fullPath: '/learn/study/$subjectId/$chapterId/mode'
      preLoaderRoute: typeof AuthLearnStudySubjectIdChapterIdModeRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthAppIndexRoute: typeof AuthAppIndexRoute
  AuthLearnIndexRoute: typeof AuthLearnIndexRoute
  AuthAppPolarPortalRoute: typeof AuthAppPolarPortalRoute
  AuthAppPolarSubscriptionsRoute: typeof AuthAppPolarSubscriptionsRoute
  AuthLearnSubjectSubjectIdRoute: typeof AuthLearnSubjectSubjectIdRoute
  AuthAppPolarCheckoutSuccessRoute: typeof AuthAppPolarCheckoutSuccessRoute
  AuthLearnStudySubjectIdChapterIdModeRoute: typeof AuthLearnStudySubjectIdChapterIdModeRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAppIndexRoute: AuthAppIndexRoute,
  AuthLearnIndexRoute: AuthLearnIndexRoute,
  AuthAppPolarPortalRoute: AuthAppPolarPortalRoute,
  AuthAppPolarSubscriptionsRoute: AuthAppPolarSubscriptionsRoute,
  AuthLearnSubjectSubjectIdRoute: AuthLearnSubjectSubjectIdRoute,
  AuthAppPolarCheckoutSuccessRoute: AuthAppPolarCheckoutSuccessRoute,
  AuthLearnStudySubjectIdChapterIdModeRoute:
    AuthLearnStudySubjectIdChapterIdModeRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface OnboardingRouteRouteChildren {
  OnboardingCompleteRoute: typeof OnboardingCompleteRoute
  OnboardingGradeRoute: typeof OnboardingGradeRoute
  OnboardingSeriesRoute: typeof OnboardingSeriesRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingCompleteRoute: OnboardingCompleteRoute,
  OnboardingGradeRoute: OnboardingGradeRoute,
  OnboardingSeriesRoute: OnboardingSeriesRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

interface StaticRouteRouteChildren {
  StaticDocsNameRoute: typeof StaticDocsNameRoute
  StaticDocsIndexRoute: typeof StaticDocsIndexRoute
}

const StaticRouteRouteChildren: StaticRouteRouteChildren = {
  StaticDocsNameRoute: StaticDocsNameRoute,
  StaticDocsIndexRoute: StaticDocsIndexRoute,
}

const StaticRouteRouteWithChildren = StaticRouteRoute._addFileChildren(
  StaticRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  StaticRouteRoute: StaticRouteRouteWithChildren,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.tsx'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
